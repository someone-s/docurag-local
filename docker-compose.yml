services:

  extract: # internal port is 8080
    build: ./extract
    container_name: extract

  chunk:  # internal port is 8080
    build: ./chunk
    container_name: chunk
    environment:
      MODEL: mixedbread-ai/mxbai-embed-large-v1 # or Qwen/Qwen3-Embedding-0.6B
      MAX_SIZE: 512 # for Qwen3 this is 8192
      PAD_LEFT: false # for Qwen3 this is true
      
  embed:  # internal port is 80
    image: ghcr.io/huggingface/text-embeddings-inference:turing-1.8
    container_name: embed
    volumes: # Volumne for data return after restart
      - embed_data:/data
    command: "--model-id mixedbread-ai/mxbai-embed-large-v1" # change model i.e. "--model-id Qwen/Qwen3-Embedding-0.6B"
    deploy: 
      resources: 
        reservations: 
          devices: 
          - driver: nvidia 
            count: all 
            capabilities: [gpu]

  store:  # internal port is 5432
    image: pgvector/pgvector:pg17  # Prebuilt Postgres image with pgvector
    container_name: store
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: store_db
    volumes: # Volumne for data return after restart
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d store_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  manage:   # internal port is 8080
    build: ./manage
    container_name: mange
    environment:
      VECTOR_DIM: 1024
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: store_db
      POSTGRES_SERVICEORIP: store
      POSTGRES_PORT: 5432
    depends_on:
      store:
        condition: service_healthy
        restart: true
    ports:
      - 8085:8080
  
  frontend:  # internal port is 8080
    build: ./frontend
    container_name: frontend
    environment:
      EXTRACT_SERVICEORIP: extract
      EXTRACT_PORT: 8080
      CHUNK_SERVICEORIP: chunk
      CHUNK_PORT: 8080
      EMBED_SERVICEORIP: embed
      EMBED_PORT: 80
      MANAGE_SERVICEORIP: mange
      MANAGE_PORT: 8080
      GENERATE_SERVICEORIP: generate
      GENERATE_PORT: 80
      EMBED_BATCH_SIZE: 32
    env_file:
      - path: keys.env
    ports:
      - 8081:8080

volumes:
  postgres_data:
  embed_data:
  generate_data: